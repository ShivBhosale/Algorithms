# euler 2 

"""
Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 find the sum of the even-valued terms.
"""

f1, f2 = 1, 2
upper_limit = 4000000

# get the nth fibbo
memo = {}
def fib(n):
    if n == 1:
        return f1
    if n == 2:
        return f2
    if n in memo:
        return memo[n]
    else:
        memo[n] = fib(n-1) + fib(n-2)
        return memo[n]

counter = 1
loop = True
grand_sum = 0
while loop:
    val = fib(counter)
    if val<=upper_limit:
        if val%2 == 0:
            grand_sum+=val
    else:
        loop = False
    counter+=1

print(grand_sum, counter)