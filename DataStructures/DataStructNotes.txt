Okay here are my notes on the data structures that I have implemented in C++ and some
extra details and ideas that I got along with it!
------------------------------------------------------------------------------------

Do not use bits/stdc++.h as during the time of coding test, these librarires might not be
available
------------------------------------------------------------------------------------

Wow! I wrote a brilliant code for linked list. Vey clean. Amazing
------------------------------------------------------------------------------------

In a doubly linked list, swap the prev and the next pointers and set the head to the last 
element and you are done!
-----------------------------------------------------------------------------------

Shiv! If you wanna get somewhere, then you have to implement all those data structures 
that you think won't matter. Be hyper good  at what you do. Please!
-----------------------------------------------------------------------------------

Tree traversals:
preorder: Par(P)Left(L)Right(R)
inorder: LPR
post: LRP

non recursive algo blueprint for traversals:
Preorder:
===================================
initialize a stack S
while(root!=NULL){
	visit root; // here
	pust root to stack;
	root = root->left;
}

while(!stack.empty()){
	root = stack.pop;
	root = root->right;
	while(root!=NULL){
		visit(root); //here!
		push root to stack
		root = root->left;

	}
}

==================================

In order:
=================================
while(root!=NULL){
	push root to stack;
	root = root->left;
}

while(!stack.empty()){
	root = stack.pop;
	visit(root) //// Put visit here!
	root = root->right;
	while(root!=NULL){
	push root to stack;
	root = root->left;
	}
}
================================

post order:
===============================
while(root!=NULL){
	push root to stack;
	root = root->left;
}

while(!stack.empty()){
	root = stack.pop;
	
	root = root->right;
	while(root!=NULL){
	push root to stack;
	root = root->left;
	}
	visit(root) //// Put visit here!
}
================================

